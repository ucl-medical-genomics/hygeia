params {
    base_output_dir = "./result"
    params_data_dir = "params"
    simulated_data_dir = "simulated_data"
    regimes_dir = "regimes"

    input_mu_csv_path = null
    input_sigma_csv_path = null
    input_omega_csv_path = null
    input_kappa_csv_path = null
    input_u_csv_path = null
    input_p_csv_path = null

    // Default file names
    mu_csv_filename = "mu.csv"
    sigma_csv_filename = "sigma.csv"
    omega_csv_filename = "omega.csv"
    kappa_csv_filename = "kappa.csv"
    u_csv_filename = "u.csv"
    p_csv_filename = "p.csv"

    regimes_csv = "regimes.csv"
    n_methylated_reads_csv = "n_methylated_reads.csv"
    genomic_positions_csv = "genomic_positions.csv"
    n_total_reads_csv = "n_total_reads.csv"
    regime_probabilities_csv = "regimes.csv"
    theta_trace_csv = "theta_trace.csv"
}

profiles {
    local {
        process.executor='local'
    }
}

process {
  errorStrategy = 'terminate'
  // errorStrategy = 'ignore'
}

docker {
    enabled = true
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file = "${params.base_output_dir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
  enabled = true
  file = "${params.base_output_dir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
  enabled = true
  file = "${params.base_output_dir}/pipeline_info/pipeline_trace_${trace_timestamp}.txt"
}
dag {
  enabled = true
  file = "${params.base_output_dir}/pipeline_info/pipeline_dag_${trace_timestamp}.svg"
}