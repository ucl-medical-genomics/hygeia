params {
  output.specify_param_dir = "results/params"
  output.simulated_data_dir = "results/simulated_data"
  output.parameters_and_regimes_dir = "results/regimes"

  specify_parameters.extra_args = [
    "--mu 0.99,0.01,0.80,0.20,0.50,0.50",
    "--sigma 0.05,0.05,0.20,0.20,0.20,0.2886751",
    "--u 2",
    "--kappa 2,2,2,2,2,2",
    "--omega 0.995,0.975,0.950,0.925,0.900,0.900"
  ]

  simulate_data.extra_args = [
    "--number_of_samples 2",
    "--number_of_cpg_sites 250",
    "--lambda 100"
    "--rng_seed 73"
  ]

  parameters_and_regimes.extra_args = [
    "--estimate_regime_probabilities",
    "--estimate_parameters"
  ]

  // input_mu_csv_path = null
  // input_sigma_csv_path = null
  // input_omega_csv_path = null
  // input_kappa_csv_path = null
  // input_u_csv_path = null
  // input_p_csv_path = null

  // Default file names
  mu_csv_filename = "mu.csv"
  sigma_csv_filename = "sigma.csv"
  omega_csv_filename = "omega.csv"
  kappa_csv_filename = "kappa.csv"
  u_csv_filename = "u.csv"
  p_csv_filename = "p.csv"

  regimes_csv = "regimes.csv"
  n_methylated_reads_csv = "n_methylated_reads.csv"
  genomic_positions_csv = "genomic_positions.csv"
  n_total_reads_csv = "n_total_reads.csv"
  regime_probabilities_csv = "regimes.csv"
  theta_trace_csv = "theta_trace.csv"
}

profiles {
  local {
    process.executor = 'local'
  }
}

process {\
  errorStrategy = 'terminate'
  // errorStrategy = 'ignore'
}

docker {
  enabled = true
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file = "results/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
  enabled = true
  file = "results/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
  enabled = true
  file = "results/pipeline_info/pipeline_trace_${trace_timestamp}.txt"
}
